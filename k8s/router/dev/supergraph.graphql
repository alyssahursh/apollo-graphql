schema
  @core(feature: "https://specs.apollo.dev/core/v0.2"),
  @core(feature: "https://specs.apollo.dev/join/v0.1", for: EXECUTION)
{
  query: Query
}

directive @core(as: String, feature: String!, for: core__Purpose) repeatable on SCHEMA

directive @join__field(graph: join__Graph, provides: join__FieldSet, requires: join__FieldSet) on FIELD_DEFINITION

directive @join__graph(name: String!, url: String!) on ENUM_VALUE

directive @join__owner(graph: join__Graph!) on INTERFACE | OBJECT

directive @join__type(graph: join__Graph!, key: join__FieldSet) repeatable on INTERFACE | OBJECT

type Query {
  hello: String! @join__field(graph: USERS)
  me(id: ID!): User! @join__field(graph: USERS)
  teams(after: ID, limit: Int): [Team] @join__field(graph: USERS)
}

type Team {
  id: ID!
  name: String!
}

type User
  @join__owner(graph: USERS)
  @join__type(graph: USERS, key: "id")
{
  city: String! @join__field(graph: USERS)
  country: String! @join__field(graph: USERS)
  countryCode: String! @join__field(graph: USERS)
  id: ID! @join__field(graph: USERS)
  name: String! @join__field(graph: USERS)
  team: Team! @deprecated(reason: "Use `teams` instead.") @join__field(graph: USERS)
  teams: [Team!]! @join__field(graph: USERS)
  timezone: String! @join__field(graph: USERS)
}

enum core__Purpose {
  """
  `EXECUTION` features provide metadata necessary to for operation execution.
  """
  EXECUTION

  """
  `SECURITY` features provide metadata necessary to securely resolve fields.
  """
  SECURITY
}

scalar join__FieldSet

enum join__Graph {
  USERS @join__graph(name: "users" url: "http://users:4000/graphql")
}

